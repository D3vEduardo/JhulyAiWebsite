name: CD - Deploy Square Cloud

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: windows-latest

    env:
      NODE_ENV: production
      SQUARECLOUD_APP_ID: ${{ secrets.SQUARECLOUD_APP_ID }}
      SQUARECLOUD_TOKEN: ${{ secrets.SQUARECLOUD_TOKEN }}
      CLIENT_P12_B64: ${{ secrets.CLIENT_P12_B64 }}
      ENV_PRODUCTION_CONTENT: ${{ secrets.ENV_PRODUCTION_CONTENT }}

    steps:
      # 1️⃣ Checkout do código
      - name: 🔁 Checkout repositório
        uses: actions/checkout@v4

      # 2️⃣ Configurar Node.js
      - name: 🧰 Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 24

      # 3️⃣ Instalar PNPM 10 (sem run_install)
      - name: 📦 Instalar PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false

      # 4️⃣ Instalar dependências do projeto
      - name: 🧪 Instalar dependências
        run: pnpm install --frozen-lockfile

      # 5️⃣ Instalar Square Cloud CLI
      - name: 🧰 Instalar Square Cloud CLI
        run: pnpm add -g @squarecloud/cli

      # 6️⃣ Login Square Cloud CLI
      - name: 🔐 Login na Square Cloud
        run: squarecloud auth login --token "$env:SQUARECLOUD_TOKEN"

      # 7️⃣ Criar .env.production a partir do secret
      - name: 🔒 Criar .env.production
        shell: pwsh
        run: |
          $envContent = "$env:ENV_PRODUCTION_CONTENT"
          $envContent | Out-File -Encoding UTF8 .env.production

      # 8️⃣ Restaurar certificado .p12 no runner
      - name: 🔑 Restaurar certificado .p12
        shell: pwsh
        run: |
          mkdir -Force .certs
          [System.IO.File]::WriteAllBytes(".certs\client-identity.p12", [Convert]::FromBase64String("$env:CLIENT_P12_B64"))

      # 9️⃣ Executar script de build e deploy
      - name: 🏗️ Build e Deploy
        shell: pwsh
        run: .\.scripts\deploy.ps1
